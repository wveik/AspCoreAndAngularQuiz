{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/question/question.component.css","webpack:///./src/app/Components/question/question.component.html","webpack:///./src/app/Components/question/question.component.ts","webpack:///./src/app/Entities/Question.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/api-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input name=\\\"question\\\" [(ngModel)]=\\\"question.text\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Question\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input name=\\\"answer\\\" [(ngModel)]=\\\"question.answer\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Answer\\\" />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input name=\\\"wrongAnswer1\\\" [(ngModel)]=\\\"question.wrongAnswer1\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"WrongAnswer1\\\" />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input name=\\\"wrongAnswer2\\\" [(ngModel)]=\\\"question.wrongAnswer2\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"WrongAnswer2\\\" />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input name=\\\"wrongAnswer3\\\" [(ngModel)]=\\\"question.wrongAnswer3\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"WrongAnswer3\\\" />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button (click)=\\\"post()\\\" mat-raised-button>POST</button>\\r\\n  </div>\\r\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiServiceService } from '../../services/api-service.service';\nimport { Question } from 'src/app/Entities/Question';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  constructor(private service: ApiServiceService) { }\n\n  question: Question;\n\n  ngOnInit() {\n    this.question = new Question();\n  }\n\n  post() {\n    this.service.postQuestion(this.question);\n\n    this.question = new Question();\n\n    alert(\"data post to server\");\n  }\n\n}\n","export class Question {\r\n  public text: string;\r\n\r\n  public answer: string;\r\n\r\n  public wrongAnswer1: string;\r\n\r\n  public wrongAnswer2: string;\r\n\r\n  public wrongAnswer3: string;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<app-question></app-question>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HttpClientModule } from '@angular/common/http'; \r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\r\nimport { QuestionComponent } from './Components/question/question.component';\r\nimport { ApiServiceService } from './services/api-service.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    QuestionComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule, \r\n\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n\r\n    MatButtonModule, \r\n    MatCheckboxModule,\r\n\r\n    FormsModule,\r\n    \r\n  ],\r\n  providers: [\r\n    ApiServiceService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Question } from '../Entities/Question';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  postQuestion(question: Question) {\n    this.http.post('/api/questions/', question).subscribe(response => {\n          console.log(response);\n      });\n\n      \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}